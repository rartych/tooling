name: Python Analysis with Issue Comment

on:
  issues:
    types: [opened, labeled]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to comment on'
        required: true
        type: number

jobs:
  analyze-and-comment:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      
      - name: Run Python analysis
        id: python-analysis
        run: |
          # Run the Python script and capture its output
          output=$(python ./scripts/analyze.py)

          # Save multiline output to GitHub Actions output
          # Using delimiter to handle multiline strings properly
          delimiter="EOF_DELIMITER_$(date +%s)"
          {
            echo "analysis_result<<$delimiter"
            echo "$output"
            echo "$delimiter"
          } >> $GITHUB_OUTPUT
          
          echo "Analysis completed successfully!"
      
      - name: Get issue number
        id: get-issue
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "issue_number=${{ github.event.inputs.issue_number }}" >> $GITHUB_OUTPUT
          else
            echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Add comment to issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = ${{ steps.get-issue.outputs.issue_number }};
            const analysisResult = `${{ steps.python-analysis.outputs.analysis_result }}`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: analysisResult
            });
            
            console.log(`Comment added to issue #${issueNumber}`);
      
      - name: Summary
        run: |
          echo "âœ… Python analysis completed and comment added to issue #${{ steps.get-issue.outputs.issue_number }}"
